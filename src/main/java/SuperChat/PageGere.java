/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SuperChat;

import Database.Mysql;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author pumba
 */
public class PageGere extends javax.swing.JFrame {

    private Mysql connector;
    private ErrorDialog erreur;
    
    /**
     * Creates new form PageGere
     */
    public PageGere() {
        initComponents();
                   
        this.setLocationRelativeTo(null);
        
        connector = new Mysql();
        erreur = new ErrorDialog();
        try
        {
            ComboUsers.removeAllItems();
            ComboAcces.removeAllItems(); 
            ComboSalons.removeAllItems();
            
            // On remplit la ComboBox avec les noms de Salons
            String query = "SELECT nomSalon FROM Salon;";            
            ResultSet result = connector.sendQuery(query);

            while(result.next())
            {
                ComboSalons.addItem(result.getString("nomSalon"));
            }
            
            // Idem avec les Users
            query = "SELECT login FROM User;";            
            result = connector.sendQuery(query);
            while(result.next())
            {
                ComboUsers.addItem(result.getString("login"));
            }
            
            // Idem avec les droits d'accès
            ComboAcces.addItem("aucun");
            ComboAcces.addItem("lecture");
            ComboAcces.addItem("ecriture");
            ComboAcces.addItem("total");
            
            // on sélectionne le droit d'accès en
            // fonction de l'utilisateur
            query = "SELECT lecture, ecriture FROM Accede, User"
                    + " WHERE User.login = '" + ComboUsers.getSelectedItem() + "'"
                    + " AND User.idUser = Accede.idUser;";
            result = connector.sendQuery(query);
            result.first();
            if(result.getString("lecture").contentEquals("1"))
            {
                if(result.getString("ecriture").contentEquals("1"))
                {
                    ComboAcces.setSelectedItem(ComboAcces.getItemAt(4));
                }
                else
                {
                    ComboAcces.setSelectedItem(ComboAcces.getItemAt(2));
                }
            }
            else if(result.getString("ecriture").contentEquals("1"))
            {
                ComboAcces.setSelectedItem(ComboAcces.getItemAt(3));
            }
            else
            {
                ComboAcces.setSelectedItem(ComboAcces.getItemAt(1));
            } 
        }catch (SQLException ex) 
        {
            Logger.getLogger(Appclient.class.getName()).log(Level.SEVERE, null, ex);
            erreur.showError("Erreur SQL :\n" + ex.getMessage());
        }
        catch(Exception e)
        {
            erreur.showError("Erreur : \n" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ReturnButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        ComboSalons = new javax.swing.JComboBox<>();
        ComboUsers = new javax.swing.JComboBox<>();
        ComboAcces = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Salons");

        jLabel2.setText("Accès");

        jLabel4.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel4.setText("GERER-ADMIN");

        ReturnButton.setText("Retour");
        ReturnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Users");

        ComboSalons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboSalonsActionPerformed(evt);
            }
        });

        ComboUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboUsersActionPerformed(evt);
            }
        });

        ComboAcces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboAccesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ComboSalons, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(ComboUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(ComboAcces, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(ReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ReturnButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboSalons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboAcces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(237, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_ReturnButtonActionPerformed
   
    private void ComboSalonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboSalonsActionPerformed
        try {
            ComboUsers.removeAllItems();
            ComboAcces.removeAllItems();
            
            // Idem avec les Users
            String query = "SELECT login FROM User;";
            ResultSet result = connector.sendQuery(query);
            while(result.next())
            {
                ComboUsers.addItem(result.getString("login"));
            }
            
            // Idem avec les droits d'accès
            ComboAcces.addItem("aucun");
            ComboAcces.addItem("lecture");
            ComboAcces.addItem("ecriture");
            ComboAcces.addItem("total");
            
            // on sélectionne le droit d'accès en
            // fonction de l'utilisateur
            query = "SELECT lecture, ecriture FROM Accede, User"
                    + " WHERE User.login = '" + ComboUsers.getSelectedItem() + "'"
                    + " AND User.idUser = Accede.idUser;";
            result = connector.sendQuery(query);
            result.first();
            if(result.getString("lecture").contentEquals("1"))
            {
                if(result.getString("ecriture").contentEquals("1"))
                {
                    ComboAcces.setSelectedItem(ComboAcces.getItemAt(4));
                }
                else
                {
                    ComboAcces.setSelectedItem(ComboAcces.getItemAt(2));
                }
            }
            else if(result.getString("ecriture").contentEquals("1"))
            {
                ComboAcces.setSelectedItem(ComboAcces.getItemAt(3));
            }
            else
            {
                ComboAcces.setSelectedItem(ComboAcces.getItemAt(1));
            }  
        } catch (SQLException ex) {
            Logger.getLogger(PageGere.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ComboSalonsActionPerformed

    private void ComboUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboUsersActionPerformed
        try {
            ComboAcces.removeAllItems();
            ComboSalons.removeAllItems();
            
            // On remplit la ComboBox avec les noms de Salons
            String query = "SELECT nomSalon FROM Salon;";
            ResultSet result = connector.sendQuery(query);
            
            while(result.next())
            {
                ComboSalons.addItem(result.getString("nomSalon"));
            }
            
            // Idem avec les droits d'accès
            ComboAcces.addItem("aucun");
            ComboAcces.addItem("lecture");
            ComboAcces.addItem("ecriture");
            ComboAcces.addItem("total");
            
            // on sélectionne le droit d'accès en
            // fonction de l'utilisateur
            query = "SELECT lecture, ecriture FROM Accede, User"
                    + " WHERE User.login = '" + ComboUsers.getSelectedItem() + "'"
                    + " AND User.idUser = Accede.idUser;";
            result = connector.sendQuery(query);
            result.first();
            if(result.getString("lecture").contentEquals("1"))
            {
                if(result.getString("ecriture").contentEquals("1"))
                {
                    ComboAcces.setSelectedItem(ComboAcces.getItemAt(4));
                }
                else
                {
                    ComboAcces.setSelectedItem(ComboAcces.getItemAt(2));
                }
            }
            else if(result.getString("ecriture").contentEquals("1"))
            {
                ComboAcces.setSelectedItem(ComboAcces.getItemAt(3));
            }
            else
            {
                ComboAcces.setSelectedItem(ComboAcces.getItemAt(1));
            }    
        } catch (SQLException ex) {
            Logger.getLogger(PageGere.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ComboUsersActionPerformed

    private void ComboAccesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboAccesActionPerformed
        
    }//GEN-LAST:event_ComboAccesActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PageGere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PageGere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PageGere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PageGere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PageGere().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboAcces;
    private javax.swing.JComboBox<String> ComboSalons;
    private javax.swing.JComboBox<String> ComboUsers;
    private javax.swing.JButton ReturnButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
